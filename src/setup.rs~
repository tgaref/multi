use super::*;
use std::collections::HashMap;


pub fn setup(exam: Exam) -> (ExamProfile, MarkProfile) {
    let exam_profile = ExamProfile {
	total: 10,
	seed: "1a2b3c4d",
    }
    let groups = HashMap::new();
    for question in exam.questions {
	if let Some(n) = groups.get_mut(&question.group) {
	    *n += 1;
	} else {
	    groups.insert(&question.group, 1);
	}
    }
    let exam_profile = Vec::new();
    let mark_profile = vec::new();
    for (group, num) in groups {
	exam_profile.push(ExamGroupProfile { group, num, save_space: false });
	mark_profile.push(MarkGroupProfile { group, correct_mark: 1.0, wrong_mark: -0.25 })
    }
    (exam_profile, mark_profile)
}
